name: Build and Push to ECR

on:
  push:
    branches: [ main ]

  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: k8s-assessment
  ECR_REGISTRY: 084828598848.dkr.ecr.us-east-1.amazonaws.com

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      with:
        mask-password: false

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      working-directory: ./app
      run: |
        IMAGE_TAG=${GITHUB_SHA:0:6}
        
        echo "Building Docker image with tag: $IMAGE_TAG"
        docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
        
        docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
        
        echo "Pushing image with commit SHA: $IMAGE_TAG"
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "Pushing latest tag..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
        echo "image-latest=$ECR_REGISTRY/$ECR_REPOSITORY:latest" >> $GITHUB_OUTPUT
        echo "commit-sha=$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.28.0'

    - name: Install Helm
      uses: azure/setup-helm@v4
      with:
        version: '3.12.0'

    - name: Configure kubectl for EKS
      run: |
        aws eks update-kubeconfig --region $AWS_REGION --name ${{ secrets.EKS_CLUSTER_NAME }}
        kubectl config current-context

    - name: Deploy to EKS using Helm
      run: |
        IMAGE_TAG=${GITHUB_SHA:0:6}
        
        echo "Deploying with image tag: $IMAGE_TAG"
        
        cd simple-helm/flask-app
        
        # Update the image tag in values.yaml and deploy
        helm upgrade --install flask-health-app . \
          --set image.tag=$IMAGE_TAG \
          --namespace flask-app \
          --create-namespace \
          --wait \
          --timeout=300s
        
        echo "Deployment completed successfully!"
        
        # Verify deployment
        kubectl get pods -l app=flask-health-app
        kubectl get services flask-health-app
