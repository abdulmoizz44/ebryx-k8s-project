name: Build and Push to ECR

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: k8s-assessment
  ECR_REGISTRY: 084828598848.dkr.ecr.us-east-1.amazonaws.com

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      working-directory: ./app
      run: |
        # Get full commit SHA as the primary tag
        IMAGE_TAG=$GITHUB_SHA
        
        # Build Docker image with commit SHA as tag
        echo "Building Docker image with tag: $IMAGE_TAG"
        docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
        
        # Tag image for ECR with commit SHA (primary) and latest (secondary)
        docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
        
        # Push both tags to ECR (commit SHA first, then latest)
        echo "Pushing image with commit SHA: $IMAGE_TAG"
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "Pushing latest tag..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        
        # Output image URIs for use in subsequent steps
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
        echo "image-latest=$ECR_REGISTRY/$ECR_REPOSITORY:latest" >> $GITHUB_OUTPUT
        echo "commit-sha=$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Image scan
      id: image-scan
      continue-on-error: true
      run: |
        # Start image scan on the commit SHA tagged image
        aws ecr start-image-scan \
          --repository-name $ECR_REPOSITORY \
          --image-id imageTag=$GITHUB_SHA \
          --region $AWS_REGION
        
        echo "Image scan initiated for security vulnerabilities"

    - name: Summary
      run: |
        echo "## Build Summary ðŸš€" >> $GITHUB_STEP_SUMMARY
        echo "- **Repository**: $ECR_REPOSITORY" >> $GITHUB_STEP_SUMMARY
        echo "- **Registry**: $ECR_REGISTRY" >> $GITHUB_STEP_SUMMARY
        echo "- **Git Commit**: ${{ steps.build-image.outputs.commit-sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Primary Image**: ${{ steps.build-image.outputs.image }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Latest Image**: ${{ steps.build-image.outputs.image-latest }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Status**: âœ… Success" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Next Steps" >> $GITHUB_STEP_SUMMARY
        echo "The Docker image has been successfully built and pushed to ECR with git commit SHA as the primary tag." >> $GITHUB_STEP_SUMMARY
        echo "Use the primary image URI (with commit SHA) for precise deployments and traceability." >> $GITHUB_STEP_SUMMARY
        echo "You can now deploy this image using Kubernetes/Helm with the image URI above." >> $GITHUB_STEP_SUMMARY
